{"version":3,"sources":["components/UsersList/UserItem/UserItem.module.sass","components/UsersList/Header/Header.module.sass","components/UsersList/UserItem/CheckMarker/CheckMarker.module.sass","components/UsersList/UserItem/UserAvatar/UserAvatar.module.sass","components/UsersList/Header/Header.js","components/UsersList/UserItem/UserAvatar/UserAvatar.js","components/UsersList/UserItem/CheckMarker/CheckMarker.js","components/UsersList/UserItem/UserItem.js","constants/users.js","components/UsersList/UsersList.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","userItem","userContainer","textContainer","name","level","header","title","user","checkContainer","checkMarker","selectedCheckMarker","avatar","Header","props","users","userList","Map","map","index","isSelected","set","react_default","a","createElement","className","styles","Array","from","values","onClick","onClickHandler","searchValue","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","_ref3","value","_ref2","Object","slicedToArray","key","err","return","getUserKey","UserAvatar","avatarContainer","src","image","alt","CheckMarker","UserItem","userIndex","data","profileImage","userName","userLevel","isSelectedUser","UserAvatar_UserAvatar","CheckMarker_CheckMarker","UsersList","state","usersList","handleClick","_this","setState","prevState","_this2","this","Header_Header","UserItem_UserItem","React","Component","App","components_UsersList_UsersList","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de406531.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userItem\":\"UserItem_userItem__3ftV4\",\"userContainer\":\"UserItem_userContainer__1PtB8\",\"textContainer\":\"UserItem_textContainer__3TBNU\",\"name\":\"UserItem_name__3b3UZ\",\"level\":\"UserItem_level__3BTct\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2EDkJ\",\"title\":\"Header_title__1Tg6L\",\"user\":\"Header_user__GhH8w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"checkContainer\":\"CheckMarker_checkContainer__2Grje\",\"checkMarker\":\"CheckMarker_checkMarker__3yZqg\",\"selectedCheckMarker\":\"CheckMarker_selectedCheckMarker__1Trxt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"avatar\":\"UserAvatar_avatar__3ao7x\"};","import React from 'react';\nimport styles from './Header.module.sass'\n\nfunction Header(props) {\n    const users = props.userList;\n    const userList = new Map();\n\n    users.map((user, index) => {\n        if (user.isSelected) {\n            userList.set(index, user.name);\n        }\n    });\n\n    return (\n        <div className={styles.header}>\n            <div className={styles.title}>To:</div>\n            <div className={styles.user}>\n                {Array.from(userList.values()).map(user => {\n                    return  <span onClick={() => props.onClickHandler(getUserKey(userList, user))}>{user + \", \"}</span>;\n                })}\n            </div>\n        </div>\n    );\n}\nfunction getUserKey(map, searchValue) {\n    for (let [key, value] of map) {\n        if (value === searchValue)\n            return key;\n    }\n}\nexport default Header;","import React from 'react';\nimport styles from './UserAvatar.module.sass'\n\nfunction UserAvatar (props) {\n    return (\n        <div className={styles.avatarContainer}>\n            <img src={props.image} className={styles.avatar} alt=\"\" />\n        </div>\n    );\n}\n\nexport default UserAvatar;","import React from 'react';\nimport styles from './CheckMarker.module.sass'\n\nfunction CheckMarker (props) {\n    return (\n        renderCheckMarker(props.isSelected)\n    );\n}\n\nfunction renderCheckMarker(isSelected) {\n    return (\n        <div className={styles.checkContainer}>\n            <div className={isSelected ? styles.selectedCheckMarker : styles.checkMarker}>\n                <i className=\"fas fa-check\"></i>\n            </div>\n        </div>\n    );\n}\nexport default CheckMarker;\n","import React from 'react';\nimport Avatar from './UserAvatar/UserAvatar'\nimport CheckMarker from './CheckMarker/CheckMarker'\nimport styles from './UserItem.module.sass'\n\nfunction UserItem (props) {\n    const userIndex = props.data;\n    const profileImage = props.image;\n    const userName = props.name;\n    const userLevel = props.level;\n    const isSelectedUser = props.isSelected;\n\n    return (\n        <div className={styles.userItem} onClick={() => props.onClickHandler(userIndex)}>\n            <div className={styles.userContainer}>\n                <Avatar image={profileImage}/>\n                <span className={styles.textContainer}>\n                    <span className={styles.name}>{userName}</span>\n                    <span className={styles.level}>{userLevel}</span>\n                </span>\n            </div>\n            <CheckMarker isSelected={isSelectedUser}/>\n        </div>\n    );\n}\n\nexport default UserItem;","const users = [\n    {name: \"Brian McCauley\", level: \"Level 1\", image: \"https://bootdey.com/img/Content/avatar/avatar7.png\"},\n    {name: \"Chad Hayes\", level: \"Level 2\", image: \"https://bootdey.com/img/Content/avatar/avatar1.png\"},\n    {name: \"Jeff Buck\", level: \"Level 2\", image: \"https://bootdey.com/img/Content/avatar/avatar6.png\"},\n    {name: \"Kenny Griffin\", level: \"Level 3\", image: \"https://bootdey.com/img/Content/avatar/avatar3.png\"},\n    {name: \"Tom Glover\", level: \"Level 3\", image: \"https://bootdey.com/img/Content/avatar/avatar2.png\"}\n];\n\nexport default users;","import React from 'react';\nimport Header from '../UsersList/Header/Header'\nimport UserItem from '../UsersList/UserItem/UserItem'\nimport usersList from '../../constants/users'\n\nclass UsersList extends React.Component {\n\n    state = {\n        users: usersList\n    };\n\n    handleClick = (index) => {\n        this.setState(prevState => {\n            const users = prevState.users.map(user => user);\n            users[index].isSelected = !users[index].isSelected;\n            return users;\n        });\n    };\n\n\n    render () {\n        return (\n            <div>\n                <Header userList={this.state.users} onClickHandler={this.handleClick}/>\n                <div>\n                    {this.state.users.map((user, index) =>\n                        <UserItem key={index} data={index} name={user.name} level={user.level}\n                                  isSelected={user.isSelected}\n                                  image={user.image} onClickHandler={this.handleClick}/>)}\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default UsersList;","import React from 'react';\nimport './App.css';\nimport UsersList from './components/UsersList/UsersList'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <UsersList/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}